{
  "entityType" : "CONVERTER",
  "entity" : {
    "additionalInfo" : {
      "description" : ""
    },
    "configuration" : {
      "scriptLang" : "JS",
      "decoder" : null,
      "encoder" : "/** Encoder **/\r\n\r\nif(metadata.deviceType == \"pencere\"){\r\n\r\nvar value = msg.positionC;\r\nvar data = { positionC: value};\r\n// Result object with encoded downlink payload\r\nvar msg = {\r\n\r\n    // downlink data content type: JSON, TEXT or BINARY (base64 format)\r\n    contentType: \"JSON\",\r\n\r\n    // downlink data\r\n    data: JSON.stringify(data),\r\n\r\n    // Optional metadata object presented in key/value format\r\n    metadata: {\r\n        topic: \"pencere/\" + metadata.deviceName  + \"/downlink\"\r\n    }\r\n};\r\n\r\nreturn msg;\r\n\r\n} else if(metadata.deviceType == \"bobrek\") {\r\n\r\nvar value = msg.ruzgarSenaryosu;\r\nvar data = { ruzgarSenaryosu: value};\r\n// Result object with encoded downlink payload\r\nvar msg = {\r\n\r\n    // downlink data content type: JSON, TEXT or BINARY (base64 format)\r\n    contentType: \"JSON\",\r\n\r\n    // downlink data\r\n    data: JSON.stringify(data),\r\n\r\n    // Optional metadata object presented in key/value format\r\n    metadata: {\r\n         topic: metadata.topic\r\n    }\r\n}; \r\n\r\nreturn msg;\r\n\r\n} else if(metadata.deviceType == \"ruzgar\"){\r\n\r\nvar value = msg.state;\r\nvar data = { ruzgar: value};\r\n// Result object with encoded downlink payload\r\nvar msg = {\r\n\r\n    // downlink data content type: JSON, TEXT or BINARY (base64 format)\r\n    contentType: \"JSON\",\r\n\r\n    // downlink data\r\n    data: JSON.stringify(data),\r\n\r\n    // Optional metadata object presented in key/value format\r\n    metadata: {\r\n         topic: metadata.topic\r\n    }\r\n};\r\n\r\nreturn msg;\r\n\r\n} else if(metadata.deviceType == \"yagmur\"){\r\n\r\nvar value = msg.state;\r\nvar data = { yagmur: value};\r\n// Result object with encoded downlink payload\r\nvar msg = {\r\n\r\n    // downlink data content type: JSON, TEXT or BINARY (base64 format)\r\n    contentType: \"JSON\",\r\n\r\n    // downlink data\r\n    data: JSON.stringify(data),\r\n\r\n    // Optional metadata object presented in key/value format\r\n    metadata: {\r\n         topic: metadata.topic\r\n    }\r\n};\r\n\r\nreturn msg;\r\n\r\n} else if(metadata.deviceType == \"deprem\"){\r\n\r\nvar value = msg.state;\r\nvar data = { deprem: value};\r\n// Result object with encoded downlink payload\r\nvar msg = {\r\n\r\n    // downlink data content type: JSON, TEXT or BINARY (base64 format)\r\n    contentType: \"JSON\",\r\n\r\n    // downlink data\r\n    data: JSON.stringify(data),\r\n\r\n    // Optional metadata object presented in key/value format\r\n    metadata: {\r\n         topic: metadata.topic\r\n    }\r\n};\r\n\r\nreturn msg;\r\n\r\n} else if(metadata.deviceType == \"yangin\"){\r\n\r\nvar value = msg.state;\r\nvar data = { yangin: value};\r\n// Result object with encoded downlink payload\r\nvar msg = {\r\n\r\n    // downlink data content type: JSON, TEXT or BINARY (base64 format)\r\n    contentType: \"JSON\",\r\n\r\n    // downlink data\r\n    data: JSON.stringify(data),\r\n\r\n    // Optional metadata object presented in key/value format\r\n    metadata: {\r\n         topic: metadata.topic\r\n    }\r\n};\r\n\r\nreturn msg;\r\n\r\n} else if(metadata.ss_tip == \"cephe\" || metadata.ss_tip == \"tum_bloklar\") {\r\n\r\nvar data = msg;\r\n// Result object with encoded downlink payload\r\nvar msg = {\r\n\r\n    // downlink data content type: JSON, TEXT or BINARY (base64 format)\r\n    contentType: \"JSON\",\r\n\r\n    // downlink data\r\n    data: JSON.stringify(data),\r\n\r\n    // Optional metadata object presented in key/value format\r\n    metadata: {\r\n         topic: metadata.topic\r\n    }\r\n};\r\n\r\nreturn msg;\r\n\r\n}"
    },
    "debugMode" : true,
    "edgeTemplate" : false,
    "externalId" : null,
    "id" : {
      "entityType" : "CONVERTER",
      "id" : "d0323d10-6499-11ec-86ca-29471b244c2b"
    },
    "name" : "Kinco MQTT Downlink",
    "type" : "DOWNLINK"
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}